
Changes between Riassence Framework 1.0 and 1.1:
 - Fixed all known bugs
 - Replaced the last synchronous XMLHttpRequest calls with asynchronous calls
 - New value management system:
   * Supports any data structures possible in JSON
   * Backwards compatible
 - Database abstraction layer
   * Deprecated dbi
   * Replaced by Sequel
 - The default session storage engine is now sqlite
   * Mysql is still supported
 - C-based extensions prepared for easy gem installation
   * However, no gems available yet
 - Made all previously hard-coded responder URI's configurable
   * broker_urls
   * base_url
   * See: lib/conf/default.rb
 - Configuration wizard updated to match the current database support
 - Development/Debug mode shows the stdout/stderr in the console for
   two seconds before redirecting output to the log files
 - The text-to-speech client build notification (OSX only) runs in
   its own thread.
 - No "demo" plugins bundled by default, they are available in
   the "/contrib/plugins" directory in the SVN repository.
 - Client and server is now aware of the Symbian version of WebKit, supported.
 - Some date and time -related classes added as the datetime package:
   * HCalendar (Calendar component that operates on a epoch secs value)
   * HDateTime (Calendar / Date / Time support interface)
   * HTimeSheet (Displays the hours of a day as a list)
 - Added JSONRenderer; a class that builds GUI Trees based on JSON data;
   GUI development on server without additional JS using Hash- and Array
   structures. Simple usage example included.
 - Components support Arrays in their constructor as a HRect alternative:
   [x,y,width,height], also: [left,top,width,height,right,bottom]
   * with 4 items, then left and top -aligned layout with numeric indexes at:
      0: left
      1: top
      2: width
      3: height
   * with 6 items, then special layout with indexes at:
      0: left
         - right-aligned layout if null and valid number at index 2 and 4
      1: top
         - bottom-aligned layout if null and valid number at index 3 and 5
      2: width
         - auto-width if null and valid number at index 0 and 4
      4: height
         - auto-height if null and valid number at index 1 and 5
      5: right
         - right-aligned layout if valid number at index 2
         - auto-width if valid number at index 0
      6: bottom
         - bottom-aligned layout if valid number at index 3
         - auto-height if valid number at index 1
 - Command queueing system in the client:
   * The COMM.Queue HApplication instance, operates on a Array-like API
   * A requirement for asynchronous requests all the way.
 - The default index html page displays a:
   "Sorry! This site requires Javascript support." -message.
 - Equality checks with an extra '=' wherever those were still missing:
   * '!=' replaced with '!=='
   * '==' replaced with '==='
 - Fixed all encountered JSLint complaints even in the stricter mode
 - Better Unicode / UTF-8 support
 - Most component methods that returned void returns their instance instead.
 - Added an useful default extension for HButton: HClickValueButton.
   It operates on its value: 
   * 0 -> enabled
   * 1 -> clicked
   * Other values -> disabled
 - Added directional thumbs for HSlider and HVSlider:
   The 'orientation' options key has the following possible values:
   * 'c' (default, centered round thumb)
   * 'n' (north / up)
   * 's' (south / down)
   * 'w' (west / left)
   * 'e' (east / right)
 - Added a HTabItem pseudo-component for more logical addition
   of HTab items. The ".addTab()" method is still supported.
 - Added a HNumericTextControl extension of HTextControl:
   * validates/converts text entered as a numeric value in realtime.
   * Supports the mouseWheel event (Increments the value up/down)
   * Supports value ranges: minValue and maxValue.
 - The default label is now an empty string; "" instead of "Untitled"




