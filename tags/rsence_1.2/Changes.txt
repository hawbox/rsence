
Changes between Riassence Framework 1.2.0 and 1.2.1:

Client Changes:
 - COMM.Values bug fixed:
   - Client won't resync a value that was set from the server and is already
     identical on the client.
 - EVENT bugs fixed:
   - Reversed the scroll wheel direction on Safari and other WebKit browsers.
   - The startDragging method now clears previous responders properly when
     directing the event to the new responder.
 - HControl bug fixed:
   - If a component is constructed as a value range, sets the minValue and
     maxValue before binding a HValue instance.

Server Changes:
 - Removed debug message of plugin directories of the config.
 - Removed annoying warning message about localhost cookies, when accessing 'localhost'.




Changes between Riassence Framework 1.1 and 1.2:

Client Changes:
 - Pretty much everything API-wise is properly documented:
   See http://rsence.org/client_api/
 - Lots of optimization and some bug fixes
 - The javascripts that used to be attached to the main plugin are
   now a standard part of the client framework.
 - JSONRenderer now supports defining and extending classes.
 - If an 6-item array is supplied as the rect argument in the constructor
   parameters of components, the width and/or height now means minimum
   width if the width and/or height is specified as flexible
 - Added the following components:
   - HSheet, HAlertSheet and HConfirmSheet for dialog messages
   - HRadioButtonList for managing a list of selectable items
   - HCheckboxList for managing a list of multi-selectable items
   - HListItems to make using HCheckboxList and HRadioButtonList
 - Removed the HSplitView component
 - Re-Implemented at least HProgressBar and HProgressIndicator

Server Changes:
 - Added the GUIParser class (lib/plugins/guiparser.rb) on the server for
   rendering YAML GUI Trees as JSON data and passing them on to the client
   instance of JSONRenderer.
 - Updated the help text of the shell commands
 - The default configuration file format is YAML now.
   - The default configuration is specified in conf/default_conf.yaml
   - The default local configuration is specified in conf/local_conf.yaml
     - Use the default configuration as an reference for defining the local conf
     - Smart hash merge: only the differences between default and
       local need to be defined in the local, similar to what was the case in
       configuring the local_conf.rb manually before.
   - The previous ruby-source format (conf/local_conf.rb) still works.
   - The configuration wizard is updated for the new format.
 - The favicon is updated.
 - Added the :latency configuration option for simulating laggy network
   conditions while testing.
 - The "Server" HTTP Header is now set to "Riassence Framework" instead of
   whatever was the default of the chosen rack interface, like thin.
 - Removed the old MySQLAbstractor
 - Sessions are now clone-able (not enabled by default):
   - Allows several sessions in the same browser without expiring the old one
     like in the default behaviour.
   - The core of the functionality is implemented in SessionManager.
   - The configuration option :clone_cookie_sessions controls the behaviour.
   - The Message class (the msg instance) contains two new instance members:
     - cloned_source: A reference to the source of the session, if cloned.
     - cloned_targets: An array-packed reference list of the clones, if cloned.
   - Added two new Plugin methods for handling situations
     when sessions are cloned:
     - Similar event method as init_ses and restore_ses
     - The 'cloned_target' is invoked when the request created is a clone from
       a previous session.
       - Parameters:
         - msg: The Message instance like everywhere else
         - source_session: A reference to the (original) session of which the
           current session is a clone of.
     - The 'cloned_target' is invoked when the request is in a session which
       was cloned into another session.
       - Parameters:
         - msg: The Message instance like everywhere else
         - target_session: An Array-packed reference list to
           (the clones of) the current session.
 - The index_html plugin is updated:
   - The html template is more compact and the loading message is different
   - It uses gzipped transfers by default




Changes between Riassence Framework 1.0 and 1.1:
 - Fixed all known bugs
 - Replaced the last synchronous XMLHttpRequest calls with asynchronous calls
 - New value management system:
   - Supports any data structures possible in JSON
   - Backwards compatible
 - Database abstraction layer
   - Deprecated dbi
   - Replaced by Sequel
 - The default session storage engine is now sqlite
   - Mysql is still supported
 - C-based extensions prepared for easy gem installation
   - However, no gems available yet
 - Made all previously hard-coded responder URI's configurable
   - broker_urls
   - base_url
   - See: lib/conf/default.rb
 - Configuration wizard updated to match the current database support
 - Development/Debug mode shows the stdout/stderr in the console for
   two seconds before redirecting output to the log files
 - The text-to-speech client build notification (OSX only) runs in
   its own thread.
 - No "demo" plugins bundled by default, they are available in
   the "/contrib/plugins" directory in the SVN repository.
 - Client and server is now aware of the Symbian version of WebKit, supported.
 - Some date and time -related classes added as the datetime package:
   * HCalendar (Calendar component that operates on a epoch secs value)
   * HDateTime (Calendar / Date / Time support interface)
   * HTimeSheet (Displays the hours of a day as a list)
 - Added JSONRenderer; a class that builds GUI Trees based on JSON data;
   GUI development on server without additional JS using Hash- and Array
   structures. Simple usage example included.
 - Components support Arrays in their constructor as a HRect alternative:
   [x,y,width,height], also: [left,top,width,height,right,bottom]
   - with 4 items, then left and top -aligned layout with numeric indexes at:
      0: left
      1: top
      2: width
      3: height
   - with 6 items, then special layout with indexes at:
      0: left
         - right-aligned layout if null and valid number at index 2 and 4
      1: top
         - bottom-aligned layout if null and valid number at index 3 and 5
      2: width
         - auto-width if null and valid number at index 0 and 4
      4: height
         - auto-height if null and valid number at index 1 and 5
      5: right
         - right-aligned layout if valid number at index 2
         - auto-width if valid number at index 0
      6: bottom
         - bottom-aligned layout if valid number at index 3
         - auto-height if valid number at index 1
 - Command queueing system in the client:
   - The COMM.Queue HApplication instance, operates on a Array-like API
   - A requirement for asynchronous requests all the way.
 - The default index html page displays a:
   "Sorry! This site requires Javascript support." -message.
 - Equality checks with an extra '=' wherever those were still missing:
   - '!=' replaced with '!=='
   - '==' replaced with '==='
 - Fixed all encountered JSLint complaints even in the stricter mode
 - Better Unicode / UTF-8 support
 - Most component methods that returned void returns their instance instead.
 - Added an useful default extension for HButton: HClickValueButton.
   It operates on its value: 
   - 0 -> enabled
   - 1 -> clicked
   - Other values -> disabled
 - Added directional thumbs for HSlider and HVSlider:
   The 'orientation' options key has the following possible values:
   - 'c' (default, centered round thumb)
   - 'n' (north / up)
   - 's' (south / down)
   - 'w' (west / left)
   - 'e' (east / right)
 - Added a HTabItem pseudo-component for more logical addition
   of HTab items. The ".addTab()" method is still supported.
 - Added a HNumericTextControl extension of HTextControl:
   - validates/converts text entered as a numeric value in realtime.
   - Supports the mouseWheel event (Increments the value up/down)
   - Supports value ranges: minValue and maxValue.
 - The default label is now an empty string; "" instead of "Untitled"

