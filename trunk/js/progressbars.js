
HProgressBar=HControl.extend({packageName:"progress",componentName:"progressbar",constructor:function(H0,H4,H1){if(this.isinherited){this.base(H0,H4,H1);}
else{this.isinherited=true;this.base(H0,H4,H1);this.isinherited=false;}
if(!H1){H1={};}
var HJ=Base.extend({value:0,minValue:0,maxValue:100});HJ=HJ.extend(H1);H1=new HJ();this.value=H1.value;this.minValue=H1.minValue;this.maxValue=H1.maxValue;this.visibleWidth=this.rect.width-2;this.type='[HProgressBar]';this._progressbarPrefix='label';if(!this.isinherited){this.draw();}},setValue:function(H3){this.base(H3);if(this.progressbarElemId){this.drawProgress();}},draw:function(){if(!this.drawn){this.drawRect();this.drawMarkup();this._initProgress();}},_initProgress:function(){this.progressbarElemId=this.bindDomElement(this._progressbarPrefix+this.elemId);this.drawProgress();},H39:function(){var H3b=this.visibleWidth*((this.value-this.minValue)/(this.maxValue-this.minValue));var H3d=parseInt(Math.round(H3b))+'px';return H3d;},drawProgress:function(){if(this.progressbarElemId){var H3c=this.H39();prop_set(this.progressbarElemId,'width',H3c);}}});HProgressIndicator=HControl.extend({packageName:"progress",componentName:"progressindicator",constructor:function(H0,H4,H1){if(this.isinherited){this.base(H0,H4,H1);}
else{this.isinherited=true;this.base(H0,H4,H1);this.isinherited=false;}
if(!H1){H1={};}
var HJ=Base.extend({value:0,interval:20});HJ=HJ.extend(H1);H1=new HJ();this.type='[HProgressIndicator]';this._progressbarPrefix='progressmark';this.interval=H1.interval;this.value=H1.value;this._counter=null;if(!this.isinherited){this.draw();}},setValue:function(H3){if(this._progressbarElemId){if(H3==true&&!this._counter){var temp=this;this._counter=setInterval(function(){temp.drawProgress();},temp.interval);}
else{clearInterval(this._counter);this._counter=null;}}},die:function(){this.base();if(this._counter){clearInterval(this._counter);}},draw:function(){if(!this.drawn){this.drawRect();this.drawMarkup();this._initProgress();}},_initProgress:function(){this._progressbarElemId=this.bindDomElement(this._progressbarPrefix+this.elemId);this.drawProgress();},drawProgress:function(){this.progressPosition++;if(this.progressPosition>this.positionLimit-1){this.progressPosition=0;}
if(this._progressbarElemId){prop_set(this._progressbarElemId,'background-position','0px -'+
(this.progressPosition*this.rect.height)+'px');}}});