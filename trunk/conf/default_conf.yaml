#
# The :base_url specifies the prefix for all default http responders.
:base_url: '/'
#
# This setting defines if requests should be gzip-compressed or not.
# This is a trade-off between cpu cycles used and network bandwidth used.
# It's generally a good idea to leave it as false (gzipping enabled).
:no_gzip: false
#
# Enabling this appends all msg.reply call output to stdout
:trace: false
#
# The settings for the index_html plugin
:index_html:
  #
  # HTML template file path relative to the plugin dir
  :index_tmpl: 'tmpl/index.html'
  #
  # The initial index.html page <title>
  :loading_title: 'Loading...'
  #  
  # The initialized html page <title>
  :loaded_title: 'Ready'
  #  
  :noscript: '<h1>Sorry!</h1><p>This site requires a Javascript -capable web browser.</p><p>Please enable Javascript or upgrade your browser.</p>'
  #
  :instance: null
  #
  # A list of javascript dependencies to include in the html
  :deps: [ ]
#
# The settings for the main plugin
:main_plugin:
  #
  # The background color of the web page when loading is done
  :bg_color:            '#ffffff'
  #
  # how many milliseconds to wait before doing an idle poll
  :server_poll_interval: 10000 # 10 seconds
#
# Switches on debug-mode:
#  - Generates more output
#  - Each time /hello is post-requested:
#    - Plugins are reloaded from source 
#    - GZFiles are reloaded (if more recent than in memory)
:debug_mode: false
#
# Web server-related settings:
:http_server:
  #
  # Simulate network latency. Good for testing how your
  # app behaves with laggy connections.
  :latency: 0
  #
  # HTTP Port number to listen to.
  :port:  8001
  #
  # Bind this ip address ('0.0.0.0' means all)
  :bind_address:  '0.0.0.0'
  #
  # Rack handler to use, defaults to thin
  :rack_require: thin
  #
  # The rack handler; entered automatically.
  :rack_handler: null
#
# When enabled, sets http cache headers
# to cache content as long as possible.
:cache_maximize: true
#
# When :cache_maximize is enabled,
# this is the time (in seconds) the cached
# content will expire in
:cache_expire: 14515200 # 6 months
#
# Paths to scan for available plugins
:plugin_paths: [ ]
#
# The global Transporter instance will be bound to:
:transporter: null
#
# The global IndexHtml instance will be bound to:
:indexhtml: null
#
# The global FileCache instance will be bound to:
:filecache: null
#
# The global FileServe instance will be bound to:
:fileserve: null
#
# The global TicketServe instance will be bound to:
:ticketserve: null
#
# The global Broker instance will be bound to:
:broker: null
#
# The global SessionManager instance will be bound to:
:sessionmanager: null
#
# The global PluginManager instance will be bound to:
:plugins: null
#
# Transporter settings:
:transporter_conf:
  #
  # The HApplication priority of the client, when actively polling.
  :client_poll_priority: 60
  #
  # Message strings
  :messages:
    #
    # If the client fails on javascript, display this:
    :client_error:
      :title: 'ClientError'
      :descr: 'Javascript execution error:'
      :uri:   '/'
    #
    # If the filecache fails, display this:
    :filecache_error:
      :title: 'FileCacheError'
      :descr: 'FileCache failed with error:'
      :uri:   '/'
    #
    # If the plugins rescan fails, display this:
    :plugins_rescan_error:
      :title: 'PluginsRescanError'
      :descr: 'The initialization of a plugin failed with error:'
      :uri:   '/'
    #
    # If the plugins rescan fails, display this:
    :valuemanager_xhr_error:
      :title: 'ValueSyncError'
      :descr: 'Data value synchronization failed with error:'
      :uri:   '/'
    #
    # If the plugins rescan fails, display this:
    :valuemanager_validate_error:
      :title: 'ValueValidationError'
      :descr: 'The value validation failed with error:'
      :uri:   '/'
    #
    # If the plugins rescan fails, display this:
    :valuemanager_sync_client_error:
      :title:  'SyncClientError'
      :descr:  'The value syncronization to the client failed with error:'
      :uri:    '/'
    #
    # If the plugins rescan fails, display this:
    :plugin_delegate_restore_ses_error:
      :title: 'RestoreSesError'
      :descr: 'The plugin delegation process for restore_ses failed with error:'
      :uri:   '/'
    #
    # If the plugins rescan fails, display this:
    :plugin_delegate_init_ses_error:
      :title: 'InitSesError'
      :descr: 'The plugin delegation process for init_ses failed with error:'
      :uri:   '/'
    #
    # If the plugins rescan fails, display this:
    :plugin_idle_error:
      :title: 'PluginIdleError'
      :descr: 'The idle event failed for a plugin with error:'
      :uri:   '/'
#
# Session-related settings
:session_conf:
  #
  # Enable cookie-based sessions
  :session_cookies: true
  #
  # The comment string in the session cookie
  :ses_cookie_comment: "Riassence Framework Session Key"
  #
  # Disposable keys. When enabled, runs in a more secure way and changes the session key on each xhr.
  :disposable_keys:    true
  #
  # Timeout controls how long a session is valid
  :timeout_secs:       900 # 15 minutes
  #
  # Key length controls the length of the random-part of the key.
  :key_length:   64
  #
  # Cookie keys are this many times longer than xhr keys
  :cookie_key_multiplier: 3
  #
  #
  # When enabled, deletes all old sessions upon server startup
  :reset_sessions: false
  #
  # Message strings
  :messages:
    #
    # if the session is invalid for one reason or another, display this:
    :invalid_session:
      :title: 'Invalid Session'
      :descr: 'Your session is invalid. Please reload the page to continue.'
      :ur:    '/'
#
# Database configuration
:database: {
  # these two params are kept for backwards compatibility; not actually used.
  # :root_setup: { }
  # :auth_setup: { }
  # Session database storage string. Leave empty here to enable the wizard for storage.
  #:ses_db: 'sqlite:///var/lib/rsence/db/ses.db'
}

#
# ValueManager settings
:values_conf:
  # Key length controls the length of the random-part of the key.
  :key_length:    8
  #
  # Disposable keys, when enabled, changes the value id on each session restoration
  :disposable_keys:   true
#
# Daemon helper files, leave empty for defaults.
:daemon: {
  #:pid_fn: /var/run/rsence.pid
  #:log_fn: /var/log/rsence.log
}
#
:broker_urls: { }
